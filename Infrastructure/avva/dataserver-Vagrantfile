VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.box = "debian/stretch64"

  config.vm.network "public_network", bridge: "eno1"
  config.vm.network "forwarded_port", guest: 2049, host: 20049

  config.vm.provider "virtualbox" do |vb|
    vb.gui = false

    vb.customize ["modifyvm", :id, "--memory", "2048"]

  end

  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "debian-systemd.yml"
    ansible.verbose  = "vvv"
  end

  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "dataserver-vagrant.yml"
    ansible.verbose  = "v"
  end

  config.vm.hostname = "avva-dataserver"
  config.vm.define "dataserver"

end

class VagrantPlugins::ProviderVirtualBox::Action::SetName
  alias_method :original_call, :call
  def call(env)
    machine = env[:machine]
    driver = machine.provider.driver
    uuid = driver.instance_eval { @uuid }
    ui = env[:ui]

    # Find out folder of VM
    vm_folder = ""
    vm_info = driver.execute("showvminfo", uuid, "--machinereadable")
    lines = vm_info.split("\n")
    lines.each do |line|
      if line.start_with?("CfgFile")
        vm_folder = line.split("=")[1].gsub('"','')
        vm_folder = File.expand_path("..", vm_folder)
        ui.info "VM Folder is: #{vm_folder}"
      end
    end

    size = 20000
    disk_file = vm_folder + "/avva-dataserver-data.vmdk"

    ui.info "Adding disk to VM"
    if File.exist?(disk_file)
      ui.info "Disk already exists"
    else
      ui.info "Creating new disk"
      driver.execute("createmedium", "disk", "--filename", disk_file, "--size", "#{size}", "--format", "VMDK")
      ui.info "Attaching disk to VM"
      driver.execute('storageattach', uuid, '--storagectl', "SATA Controller", '--port', "1", '--type', 'hdd', '--medium', disk_file)
    end

    original_call(env)
  end
end
